{"version":3,"sources":["emptyError.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","hello","className","App","useState","photosPull","setPull","rover","setRover","camera","setCamera","sol","setSol","shownPic","setShownPic","roverCameras","onChange","e","target","value","gettingPhotos","a","preventDefault","fetch","api_url","json","data","photos","map","photo","src","img_src","renderedPhotos","length","i","push","error","onClick","renderPhotos","onSubmit","type","placeholder","min","max","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,wC,gNCKrCC,EAAQ,yBAAKC,UAAU,YACf,0DACA,oJACA,yIACuC,mDAsFtCC,MAjFf,WAAgB,IAAD,EAEiBC,mBAAS,CAACH,IAF3B,mBAENI,EAFM,KAEMC,EAFN,OAGaF,mBAAS,aAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAIeJ,mBAAS,QAJxB,mBAINK,EAJM,KAIEC,EAJF,OAKSN,mBAAS,MALlB,mBAKNO,EALM,KAKDC,EALC,OAMmBR,mBATZ,IAGP,mBAMNS,EANM,KAMIC,EANJ,KA0BTC,EAAyB,cAAVR,EAjBjB,4BAAQL,UAAU,SAASc,SAAU,SAACC,GAAOP,EAAUO,EAAEC,OAAOC,SAC9D,4BAAQA,MAAM,QAAd,iCACA,4BAAQA,MAAM,QAAd,gCACA,4BAAQA,MAAM,QAAd,eACA,4BAAQA,MAAM,WAAd,gCACA,4BAAQA,MAAM,SAAd,yBACA,4BAAQA,MAAM,SAAd,uBACA,4BAAQA,MAAM,UAAd,sBAGF,4BAAQjB,UAAU,SAASc,SAAU,SAACC,GAAOP,EAAUO,EAAEC,OAAOC,SAC9D,4BAAQA,MAAM,QAAd,iCACA,4BAAQA,MAAM,QAAd,gCACA,4BAAQA,MAAM,UAAd,qBACA,4BAAQA,MAAM,UAAd,oBACA,4BAAQA,MAAM,WAAd,4CAIEC,EAAa,uCAAG,WAAOH,GAAP,iBAAAI,EAAA,6DACpBJ,EAAEK,iBADkB,SAGpBC,MAAM,kDAAD,OAAmDhB,EAAnD,uBAAuEI,EAAvE,mBAAqFF,EAArF,oBAzCO,6CAsCQ,cAEde,EAFc,gBAIDA,EAAQC,OAJP,OAIdC,EAJc,OAKpBpB,GAAQ,WAAO,OAAOoB,EAAKC,OAAOC,KAAI,SAAAC,GAAK,OAAI,yBAAK3B,UAAU,QAAQ4B,IAAKD,EAAME,gBACjFjB,EArCkB,IA+BE,2CAAH,sDASbkB,EAAiB,GAYvB,OAVqB,WACnB,GAAG3B,EAAW4B,QAAU,EACtB,IAAI,IAAIC,EAAE,EAAGA,EAAErB,EAAUqB,IACzBF,EAAeG,KAAK9B,EAAW6B,SAE5BF,EAAeG,KAAK,yBAAKjC,UAAU,QAAQ4B,IAAKM,OAClD/B,EAAW4B,OAAS,IAAID,EAAeG,KAAK,4BAAQjC,UAAU,gBAAgBmC,QAAS,kBAAMvB,EAAYD,EAAS,MAAtE,cAEjDyB,GAIE,yBAAKpC,UAAU,OACb,0BAAMA,UAAU,OAAOqC,SAAU,SAACtB,GAAOG,EAAcH,KACrD,mDAEE,4BAAQf,UAAU,SAASc,SAAU,SAACC,GAAOT,EAASS,EAAEC,OAAOC,SAC7D,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,UAAd,YAGJ,sDAEGJ,GAEH,6CAEE,2BAAOb,UAAU,SAASsC,KAAK,SAASC,YAAY,iBAAiBtB,MAAOR,EAAK+B,IAAI,IAAIC,IAAI,OAAO3B,SAAU,SAACC,GAAD,OAAOL,EAAOK,EAAEC,OAAOC,WAEvI,4BAAQjB,UAAU,cAAlB,kBAEF,6BACE,yBAAKA,UAAU,UACZ8B,MC3ESY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAxB,GACLyB,QAAQzB,MAAMA,EAAM0B,c","file":"static/js/main.d82b7453.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emptyError.d06e7477.jpg\";","import React, {useState} from 'react';\nimport './App.scss';\nimport error from './emptyError.jpg'\n\nconst API_KEY = '7EPauFHRlnq3efbN0Zdjp2UEPzxD7oqfPiGZR7uc'\nconst hello = <div className=\"greeting\">\n              <p>Hello from Mars, dear User.</p>\n              <p>On this site you can view photos taken on Mars by three rovers from different cameras on any day of their expedition.</p>\n              <p>To do this, you need to select the rover, camera and day (Martian sol). \n                  Then, you need to press the button <code>'Just show it!'</code></p> \n              </div>\n  const photoInPage = 12\n\n\nfunction App() {\n\n  const [photosPull, setPull] = useState([hello])\n  const [rover, setRover] = useState('curiosity')\n  const [camera, setCamera] = useState('fhaz')\n  const [sol, setSol] = useState(2882)\n  const [shownPic, setShownPic] = useState(photoInPage)\n\n  const curiosityCameras = \n    <select className=\"filter\" onChange={(e) => {setCamera(e.target.value)}}>\n      <option value=\"fhaz\">Front Hazard Avoidance Camera</option>\n      <option value=\"rhaz\">Rear Hazard Avoidance Camera</option>\n      <option value=\"mast\">Mast Camera</option>\n      <option value=\"chemcam\">Chemistry and Camera Complex</option>\n      <option value=\"mahli\">Mars Hand Lens Imager</option>\n      <option value=\"mardi\">Mars Descent Imager</option>\n      <option value=\"navcam\">Navigation Camera</option>\n    </select>\n  const opportunityAndSpiritCameras = \n    <select className=\"filter\" onChange={(e) => {setCamera(e.target.value)}}>\n      <option value=\"fhaz\">Front Hazard Avoidance Camera</option>\n      <option value=\"rhaz\">Rear Hazard Avoidance Camera</option>\n      <option value=\"navcam\">Navigation Camera</option>\n      <option value=\"pancam\">Panoramic Camera</option>\n      <option value=\"minites\">Miniature Thermal Emission Spectrometer</option>\n    </select>\n  let roverCameras = rover === 'curiosity' ? curiosityCameras : opportunityAndSpiritCameras\n\n  const gettingPhotos = async (e) => {\n    e.preventDefault();\n    const api_url = await\n    fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&camera=${camera}&api_key=${API_KEY}`);\n    const data = await api_url.json();\n    setPull(() => {return data.photos.map(photo => <img className='photo' src={photo.img_src}/>)})\n    setShownPic(photoInPage)\n  }\n\n  const renderedPhotos = []\n\n  const renderPhotos = () => {\n    if(photosPull.length >= 1){\n      for(var i=0; i<shownPic; i++){\n      renderedPhotos.push(photosPull[i])\n    }} \n    else renderedPhotos.push(<img className='error' src={error}/>);\n    if(photosPull.length > 12) renderedPhotos.push(<button className=\"load-more-btn\" onClick={() => setShownPic(shownPic+12)}>Load more</button>)\n  }\n  renderPhotos()\n\n  return (\n    \n    <div className=\"App\">\n      <form className=\"form\" onSubmit={(e) => {gettingPhotos(e)}}>\n        <label>\n          Name of the Rover\n          <select className=\"filter\" onChange={(e) => {setRover(e.target.value)}}>\n            <option value=\"curiosity\">Curiosity</option>\n            <option value=\"opportunity\">Opportunity</option>\n            <option value=\"spirit\">Spirit</option>\n          </select>\n        </label>\n        <label>\n          Cameras of the Rover\n          {roverCameras}   \n        </label>\n        <label>\n          Martian sol\n          <input className=\"filter\" type=\"number\" placeholder=\"Change the Sol\" value={sol} min=\"0\" max=\"2882\" onChange={(e) => setSol(e.target.value)} />\n        </label>\n        <button className=\"submit-btn\">Just show it!</button>\n      </form>\n      <div>\n        <div className=\"photos\">\n          {renderedPhotos}\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}